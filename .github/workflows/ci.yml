name: CI

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: "file:./test.db"
      GITHUB_CLIENT_ID: "test-client-id"
      GITHUB_CLIENT_SECRET: "test-client-secret"
      NEXTAUTH_SECRET: "test-nextauth-secret"
      NEXTAUTH_URL: "http://localhost:3000"

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: |
        pnpm install
        pnpm add puppeteer@latest
        pnpm add -D @types/puppeteer@latest
        pnpm add openai@latest

    - name: Check installed versions
      run: |
        echo "Installed package versions:"
        pnpm list puppeteer @types/puppeteer openai

    - name: Generate Prisma Client
      run: pnpm prisma generate
      
    - name: Type check
      run: |
        echo "Checking TypeScript types..."
        pnpm type-check || (echo "TypeScript errors found" && exit 1)
      
    - name: Lint
      run: pnpm lint
    - name: Lint fix
      run: |
        echo "Attempting to fix lint issues..."
        pnpm lint --fix || true
        
    - name: Lint check
      run: |
        echo "Checking remaining lint issues..."
        pnpm lint
      
    - name: Build
      run: pnpm build